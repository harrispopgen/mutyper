import os
import sys
import math
import pandas as pd
from snakemake.utils import min_version

min_version("6.4.0")
shell.prefix("set -eo pipefail; ")
SDIR = os.path.realpath(os.path.dirname(srcdir("Snakefile")))


#
# Inputs
#
assert "vcf" in config, "vcf file must be specified in config!"
VCF = config["vcf"]

#
# Other inputs
#
CHAIN = config.get("chain", "results/chain/out-to-ref.chain")

ANCESTOR_FA = config.get("ancestor", "results/ancestor.fa")
ANCESTOR_FAI = f"{ANCESTOR_FA}.fai"

REF = config.get("reference", "")
FAI = f"{REF}.fai"

OUTGROUP = config.get("outgroup", "")

#
# Check inputs
#
if "ancestor" not in config:
    assert (
        "reference" in config and "outgroup" in config
    ), "Without an ancestor file a reference file and an outgroup file must be specified!"

    assert os.path.exists(FAI), "reference fasta index file not found!"
    CHRS = [line.split()[0] for line in open(FAI).readlines()]
else:
    assert os.path.exists(
        ANCESTOR_FAI
    ), f"ancestor fasta index file not found! {ANCESTOR_FAI}"
    CHRS = [line.split()[0] for line in open(ANCESTOR_FAI).readlines()]


#
#
#
wildcard_constraints:
    chrm="|".join(CHRS),


#
# rules
#
include: "rules/mutyper.smk"


rule all:
    input:
        rules.mutyper_vcf.output,
        rules.mutyper_spectra.output,
